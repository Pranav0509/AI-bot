{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mydox\\\\OneDrive\\\\Desktop\\\\chatbot-app\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const chatRef = useRef(null);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setInput('');\n    try {\n      const res = await axios.post('http://localhost:5000/api/chat', {\n        message: input\n      });\n      const botMsg = {\n        text: res.data.reply,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMsg]);\n    } catch (error) {\n      console.error('❌ Error sending message:', error);\n      setMessages(prev => [...prev, {\n        text: \"Error: Unable to get response.\",\n        sender: 'bot'\n      }]);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') sendMessage();\n  };\n  useEffect(() => {\n    var _chatRef$current;\n    (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollTo({\n      top: chatRef.current.scrollHeight,\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCAC Chat with AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatRef,\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyPress,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"M4SfreQfJzQnfVUq+PgQ4e5mhlI=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","chatRef","sendMessage","trim","userMsg","text","sender","prev","res","post","message","botMsg","data","reply","error","console","handleKeyPress","e","key","_chatRef$current","current","scrollTo","top","scrollHeight","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","i","type","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mydox/OneDrive/Desktop/chatbot-app/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const chatRef = useRef(null);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMsg = { text: input, sender: 'user' };\r\n    setMessages((prev) => [...prev, userMsg]);\r\n    setInput('');\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/chat', { message: input });\r\n      const botMsg = { text: res.data.reply, sender: 'bot' };\r\n      setMessages((prev) => [...prev, botMsg]);\r\n    } catch (error) {\r\n      console.error('❌ Error sending message:', error);\r\n      setMessages((prev) => [...prev, { text: \"Error: Unable to get response.\", sender: 'bot' }]);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') sendMessage();\r\n  };\r\n\r\n  useEffect(() => {\r\n    chatRef.current?.scrollTo({ top: chatRef.current.scrollHeight, behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>💬 Chat with AI</h2>\r\n      <div className=\"chat-box\" ref={chatRef}>\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyPress}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}