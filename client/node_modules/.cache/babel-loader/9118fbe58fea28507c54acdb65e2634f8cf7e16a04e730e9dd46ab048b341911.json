{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mydox\\\\OneDrive\\\\Desktop\\\\chatbot-app\\\\client\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(prev => [...prev, userMsg]);\n    try {\n      const res = await axios.post('http://localhost:5000/api/chat', {\n        message: input\n      });\n      const botMsg = {\n        sender: 'bot',\n        text: res.data.reply\n      };\n      setMessages(prev => [...prev, botMsg]);\n    } catch {\n      const errorMsg = {\n        sender: 'bot',\n        text: \"Error: Unable to get response.\"\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chat-title\",\n      children: \"\\uD83D\\uDCAC Chat with AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","input","setInput","sendMessage","trim","userMsg","sender","text","prev","res","post","message","botMsg","data","reply","errorMsg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mydox/OneDrive/Desktop/chatbot-app/client/src/Chat.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chat.css';\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMsg = { sender: 'user', text: input };\r\n    setMessages(prev => [...prev, userMsg]);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/chat', { message: input });\r\n      const botMsg = { sender: 'bot', text: res.data.reply };\r\n      setMessages(prev => [...prev, botMsg]);\r\n    } catch {\r\n      const errorMsg = { sender: 'bot', text: \"Error: Unable to get response.\" };\r\n      setMessages(prev => [...prev, errorMsg]);\r\n    }\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2 className=\"chat-title\">ðŸ’¬ Chat with AI</h2>\r\n      <div className=\"chat-box\">\r\n        {messages.map((msg, i) => (\r\n          <div key={i} className={`message ${msg.sender}`}>\r\n            <div className=\"message-content\">{msg.text}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}